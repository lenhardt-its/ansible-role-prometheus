---
- name: create system group
  group:
    name: "{{ prometheus_system_group }}"
    system: true
    state: present
  when: prometheus_system_group != "root"
  become: true
  tags: prometheus

- name: create system user
  user:
    name: "{{ prometheus_system_user }}"
    system: true
    shell: "/sbin/nologin"
    group: "{{ prometheus_system_group }}"
    createhome: false
  when: prometheus_system_user != "root"
  become: true
  tags: prometheus

- name: create configuration and data directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ prometheus_system_user }}"
    group: "{{ prometheus_system_group }}"
    mode: 0755
  with_items:
    - "{{ prometheus_db_dir }}"
    - "{{ prometheus_config_dir }}"
    - "{{ prometheus_config_dir }}/rules"
    - "{{ prometheus_config_dir }}/file_sd"
  become: true
  tags: prometheus

- name: check if prometheus is installed
  stat:
    path: "{{ prometheus_binary_install_dir }}/prometheus"
  register: __prometheus_is_installed
  become: true
  tags: prometheus

- name: gather currently installed prometheus version (if any)
  command: "{{ prometheus_binary_install_dir }}/prometheus --version"
  args:
    warn: false
  changed_when: false
  register: __prometheus_current_version_output
  when: __prometheus_is_installed.stat.exists
  become: true
  tags: prometheus

- name: download binary to local folder
  get_url:
    url: "https://github.com/prometheus/prometheus/releases/download/v{{ prometheus_version }}/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz"
    dest: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz"
  environment: "{{ proxy_env }}"
  register: _download_archive
  until: _download_archive is succeeded
  retries: 5
  delay: 2
  # run_once: true # <-- this cannot be set due to multi-arch support
  delegate_to: localhost
  check_mode: false
  become: true
  tags: prometheus
  when: (not __prometheus_is_installed.stat.exists) or (__prometheus_current_version_output.stdout_lines[0].split(" ")[2] != prometheus_version)

- name: unpack binaries
  unarchive:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}.tar.gz"
    dest: "/tmp"
    creates: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/prometheus"
  delegate_to: localhost
  check_mode: false
  become: true
  tags: prometheus
  when: (not __prometheus_is_installed.stat.exists) or (__prometheus_current_version_output.stdout_lines[0].split(" ")[2] != prometheus_version)
  
- name: propagate binaries
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/{{ item }}"
    dest: "{{ prometheus_binary_install_dir }}/{{ item }}"
    mode: 0755
    owner: root
    group: root
  with_items:
    - prometheus
    - promtool
  notify: restart prometheus
  become: true
  tags: prometheus
  when: (not __prometheus_is_installed.stat.exists) or (__prometheus_current_version_output.stdout_lines[0].split(" ")[2] != prometheus_version)

- name: propagate console templates
  copy:
    src: "/tmp/prometheus-{{ prometheus_version }}.linux-{{ go_arch }}/{{ item }}/"
    dest: "{{ prometheus_config_dir }}/{{ item }}/"
    mode: 0644
    owner: "{{ prometheus_system_user }}"
    group: "{{ prometheus_system_group }}"
  with_items:
    - console_libraries
    - consoles
  notify: restart prometheus
  become: true
  tags: prometheus
  when: (not __prometheus_is_installed.stat.exists) or (__prometheus_current_version_output.stdout_lines[0].split(" ")[2] != prometheus_version)

- name: copy alert rules files
  copy:
    src: "{{ item }}"
    dest: "{{ prometheus_config_dir }}/rules/{{ item }}"
    mode: 0644
    owner: "{{ prometheus_system_user }}"
    group: "{{ prometheus_system_group }}"
  with_items: "{{ prometheus_alertrules_files }}"
  notify: reload prometheus
  become: true
  tags: 
    - prometheus
    - alertfiles

- name: configure
  template:
    src: "prometheus.yml.j2"
    dest: "{{ prometheus_config_dir }}/config.yml"
    force: true
    owner: "{{ prometheus_system_user }}"
    group: "{{ prometheus_system_group }}"
    mode: 0640
    validate: "{{ prometheus_binary_install_dir }}/promtool check config %s"
  notify: reload prometheus
  become: true
  tags: 
    - prometheus
    - prometheus_config

- name: configure static targets
  copy:
    content: |
      #jinja2: lstrip_blocks: True
      {{ item.value | to_nice_json(indent=2) }}
    dest: "{{ prometheus_config_dir }}/file_sd/static_{{ item.key }}.json"
    force: true
    owner: "{{ prometheus_system_user }}"
    group: "{{ prometheus_system_group }}"
    mode: 0644
  with_dict: "{{ prometheus_targets }}"
  when: prometheus_targets != {}
  notify: reload prometheus
  become: true
  tags: prometheus

- name: copy custom static targets
  copy:
    src: "{{ item }}"
    dest: "{{ prometheus_config_dir }}/file_sd/"
    force: true
    owner: "{{ prometheus_system_user }}"
    group: "{{ prometheus_system_group }}"
    mode: 0640
  with_fileglob: "{{ prometheus_static_targets_files }}"
  become: true
  tags: prometheus

- name: create systemd service unit
  template:
    src: prometheus.service.j2
    dest: /etc/systemd/system/prometheus.service
    owner: root
    group: root
    mode: 0644
  notify: restart prometheus
  become: true
  tags: prometheus

- name: ensure service is started and enabled
  systemd:
    name: prometheus
    state: reloaded
    enabled: yes
  become: true
  tags: prometheus